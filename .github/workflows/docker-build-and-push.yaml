---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Build and Publish DevContainer Image

on:
  push:
    branches: [ main ]

  pull_request: {}

  workflow_dispatch:
    inputs:
      publish:
        description: "Publish the image to the registry?"
        required: true
        type: boolean
        default: false
      custom-tag:
        description: "Custom tag for the image"
        type: string
        required: false


jobs:
  build:
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v4.1.4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0

      - name: Build and export
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          tags: ${{ github.event.repository.name }}:latest
          outputs: type=docker,dest=/tmp/${{ github.event.repository.name }}.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: ${{ github.event.repository.name }}
          path: /tmp/${{ github.event.repository.name }}.tar
          if-no-files-found: error
          retention-days: 1

  generate-tag:
    runs-on: "ubuntu-latest"
    outputs:
      tags: ${{ steps.generator.outputs.tags }}

    steps:
      - name: Install prerqeuisites
        run: sudo apt update && sudo apt install -y curl jq

      - name: Checkout the Repository
        uses: actions/checkout@v4.1.4

      - name: Generate Image Tag
        id: generator
        env:
          REGISTRY_USER: "${{ github.repository_owner }}"
          REGISTRY_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          REGISTRY_URL: ghcr.io
          IMAGE_NAME: ${{ github.event.repository.name }}
        run: echo "tags=$(bash scripts/generate_calver_tag.sh)" >> "$GITHUB_OUTPUT"

  publish:
    runs-on: "ubuntu-latest"
    needs:
      - build
      - generate-tag

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v4.1.4

      - name: Download artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: ${{ github.event.repository.name }}
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/${{ github.event.repository.name }}.tar
          docker image ls -a

      - name: Login to Dockerhub Registry
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: |
            docker.io/${{ vars.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
          tags: |
            ${{ needs.generate-tag.outputs.tags }}
            ${{ github.event.inputs.custom-tag }}
            latest
            type=sha

      - name: Push
        uses: docker/build-push-action@v5.3.0
        with:
          context: .devcontainer
          platforms: linux/amd64
          push: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch' && github.event.inputs.publish == 'true') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}